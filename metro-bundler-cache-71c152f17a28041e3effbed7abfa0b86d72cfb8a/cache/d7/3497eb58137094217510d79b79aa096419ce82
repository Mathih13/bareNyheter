Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _this = this,
    _class,
    _temp;

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _nativeBase = require('native-base');

var _nextlvlLib = require('nextlvl-lib');

writeToClipboard = function writeToClipboard(text) {
  return regeneratorRuntime.async(function writeToClipboard$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return regeneratorRuntime.awrap(_reactNative.Clipboard.setString(text));

        case 2:
          _nativeBase.Toast.show({
            text: 'URL Kopiert',
            position: 'top',
            type: 'success',
            duration: 2000
          });

        case 3:
        case 'end':
          return _context.stop();
      }
    }
  }, null, _this);
};

var WebSurfer = (_temp = _class = function (_Component) {
  babelHelpers.inherits(WebSurfer, _Component);

  function WebSurfer() {
    babelHelpers.classCallCheck(this, WebSurfer);
    return babelHelpers.possibleConstructorReturn(this, (WebSurfer.__proto__ || Object.getPrototypeOf(WebSurfer)).apply(this, arguments));
  }

  babelHelpers.createClass(WebSurfer, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_reactNative.WebView, {
        source: { uri: this.props.navigation.state.params.url }
      });
    }
  }]);
  return WebSurfer;
}(_react.Component), _class.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;
  return {
    headerRight: _react2.default.createElement(
      _nextlvlLib.ActionSheet,
      {
        options: ['Kopier URL', 'Del', 'Ã…pne i nettleser'],
        cancelText: 'Avbryt',
        onPress: function onPress(index) {
          switch (index) {
            case 0:
              writeToClipboard(navigation.state.params.url);
              break;
            case 1:
              _reactNative.Share.share({ url: navigation.state.params.url });
              break;
            case 2:
              _reactNative.Linking.openURL(navigation.state.params.url);
              break;

          }
        },
        style: { marginRight: 15 }
      },
      _react2.default.createElement(_reactNativeElements.Icon, { type: 'entypo', name: 'dots-three-horizontal', size: 20, color: 'rgb(0, 122, 255)' })
    )
  };
}, _temp);
exports.default = WebSurfer;